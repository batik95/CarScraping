FROM python:3.11-slim

# Install system dependencies including PostgreSQL and Redis
RUN apt-get update && apt-get install -y \
    gcc \
    postgresql \
    postgresql-contrib \
    redis-server \
    supervisor \
    curl \
    gosu \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY app/ ./app/
COPY alembic.ini .

# Copy Unraid-specific configuration files
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY docker/entrypoint.sh /entrypoint.sh

# Create necessary directories
RUN mkdir -p /var/lib/postgresql/data \
    /var/log/supervisor \
    /config \
    /data \
    /logs \
    /var/run/postgresql \
    && chmod +x /entrypoint.sh

# Create app user and set permissions
RUN useradd --create-home --shell /bin/bash app \
    && chown -R app:app /app /logs \
    && chown -R postgres:postgres /var/lib/postgresql /var/run/postgresql \
    && chown -R redis:redis /var/lib/redis

# Create PostgreSQL data directory with correct permissions
RUN mkdir -p /data/postgres /data/redis \
    && chown -R postgres:postgres /data/postgres \
    && chown -R redis:redis /data/redis

# Expose ports
EXPOSE 8787 5432 6379

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8787/health || exit 1

# Use custom entrypoint for initialization
ENTRYPOINT ["/entrypoint.sh"]

# Default command starts supervisor
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]